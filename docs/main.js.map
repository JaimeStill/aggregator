{"version":3,"file":"main.js","mappings":"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","sources":["./src/aggregator/app/app.component.ts","./src/aggregator/app/app.component.html","./src/aggregator/app/app.module.ts","./src/aggregator/app/components/core/expansion-card.component.ts","./src/aggregator/app/components/core/expansion-card.component.html","./src/aggregator/app/components/swapi/aggregators/film.aggregator.ts","./src/aggregator/app/components/swapi/aggregators/film.aggregator.html","./src/aggregator/app/components/swapi/aggregators/people.aggregator.ts","./src/aggregator/app/components/swapi/aggregators/people.aggregator.html","./src/aggregator/app/components/swapi/aggregators/planet.aggregator.ts","./src/aggregator/app/components/swapi/aggregators/planet.aggregator.html","./src/aggregator/app/components/swapi/aggregators/species.aggregator.ts","./src/aggregator/app/components/swapi/aggregators/species.aggregator.html","./src/aggregator/app/components/swapi/aggregators/starship.aggregator.ts","./src/aggregator/app/components/swapi/aggregators/starship.aggregator.html","./src/aggregator/app/components/swapi/aggregators/swapi.aggregator.ts","./src/aggregator/app/components/swapi/aggregators/vehicle.aggregator.ts","./src/aggregator/app/components/swapi/aggregators/vehicle.aggregator.html","./src/aggregator/app/components/swapi/swapi-aggregator.component.ts","./src/aggregator/app/components/swapi/swapi-aggregator.component.html","./src/aggregator/app/components/swapi/swapi-list.component.ts","./src/aggregator/app/components/swapi/swapi-list.component.html","./src/aggregator/app/material.module.ts","./src/aggregator/app/models/index.ts","./src/aggregator/app/models/swapi-query.ts","./src/aggregator/app/models/swapi/film.ts","./src/aggregator/app/models/swapi/index.ts","./src/aggregator/app/models/swapi/person.ts","./src/aggregator/app/models/swapi/planet.ts","./src/aggregator/app/models/swapi/species.ts","./src/aggregator/app/models/swapi/starship.ts","./src/aggregator/app/models/swapi/swapi-result.ts","./src/aggregator/app/models/swapi/swapi.ts","./src/aggregator/app/models/swapi/vehicle.ts","./src/aggregator/app/routes/home/home.route.ts","./src/aggregator/app/routes/home/home.route.html","./src/aggregator/app/routes/home/index.ts","./src/aggregator/app/routes/index.ts","./src/aggregator/app/services/core.service.ts","./src/aggregator/app/services/index.ts","./src/aggregator/app/services/snacker.service.ts","./src/aggregator/app/services/swapi/index.ts","./src/aggregator/app/services/swapi/swapi.service.ts","./src/aggregator/app/services/theme.service.ts","./src/aggregator/environments/environment.ts","./src/aggregator/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ThemeService } from './services';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html'\r\n})\r\nexport class AppComponent {\r\n  constructor(\r\n    public themer: ThemeService\r\n  ) { }\r\n}\r\n","<section class=\"mat-typography mat-app-background app-frame\"\r\n         [ngClass]=\"themer.isLight ? 'app-light' : 'app-dark'\">\r\n  <mat-toolbar color=\"primary\"\r\n               class=\"app-toolbar sticky-top\">\r\n    <span fxFlex>Data Aggregators</span>\r\n    <button mat-icon-button\r\n            [ngClass]=\"themer.isLight ? 'color-yellow' : 'color-text'\"\r\n            (click)=\"themer.toggleTheme()\">\r\n      <mat-icon *ngIf=\"themer.isLight\">brightness_5</mat-icon>\r\n      <mat-icon *ngIf=\"!(themer.isLight)\">brightness_3</mat-icon>\r\n    </button>\r\n  </mat-toolbar>\r\n  <section class=\"app-container\">\r\n    <router-outlet></router-outlet>\r\n  </section>\r\n</section>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MaterialModule } from './material.module';\r\nimport { Components } from './components';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport {\r\n  RouteComponents,\r\n  Routes\r\n} from './routes';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ...Components,\r\n    ...RouteComponents\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    RouterModule.forRoot(Routes)\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {\r\n    Component,\r\n    Input\r\n} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'expansion-card',\r\n    templateUrl: 'expansion-card.component.html'\r\n})\r\nexport class ExpansionCardComponent {\r\n    @Input() heading: string = 'Heading';\r\n    @Input() expanded: boolean = false;\r\n    @Input() collapseIcon: string = 'keyboard_arrow_down';\r\n    @Input() expandIcon: string = 'keyboard_arrow_up';\r\n    @Input() cardStyle: string = 'm4 p2 rounded card-outline-accent';\r\n\r\n    toggle = () => this.expanded = !this.expanded;\r\n}\r\n","<section fxLayout=\"column\"\r\n         fxLayoutAlign=\"start stretch\"\r\n         [class]=\"cardStyle\">\r\n    <section fxLayout=\"row\"\r\n             fxLayoutAlign=\"space-between center\"\r\n             class=\"background-card p2 cursor-pointer\"\r\n             (click)=\"toggle()\">\r\n        <h1 class=\"mat-title m4\">{{heading}}</h1>\r\n        <mat-icon class=\"m4\">{{expanded ? collapseIcon : expandIcon}}</mat-icon>\r\n    </section>\r\n    <section *ngIf=\"expanded\"\r\n             class=\"p2\"\r\n             fxLayout=\"column\"\r\n             fxLayoutAlign=\"start stretch\">\r\n        <ng-content></ng-content>\r\n    </section>\r\n</section>\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output\r\n} from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Film } from '../../../models';\r\nimport { SnackerService } from '../../../services';\r\nimport { SwapiAggregator } from './swapi.aggregator';\r\n\r\n@Component({\r\n    selector: 'film-aggregator',\r\n    templateUrl: 'film.aggregator.html'\r\n})\r\nexport class FilmAggregator extends SwapiAggregator<Film> implements OnInit, OnDestroy {\r\n    @Input() search: Observable<string>;\r\n    @Output() action = new EventEmitter<Film>();\r\n\r\n    render = (film: Film) => film.title;\r\n\r\n    constructor(\r\n        protected http: HttpClient,\r\n        protected snacker: SnackerService\r\n    ) {\r\n        super(http, snacker, 'films');\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initSub(this.search);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.sub?.unsubscribe();\r\n    }\r\n}\r\n","<expansion-card heading=\"Films\">\r\n    <ng-template #loading>\r\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n    </ng-template>\r\n    <ng-container *ngIf=\"query.result$ | async as result else loading\">\r\n        <swapi-list [result]=\"result\"\r\n                    [render]=\"render\"\r\n                    (previous)=\"setEndpoint($event)\"\r\n                    (next)=\"setEndpoint($event)\"\r\n                    (action)=\"action.emit($event)\"></swapi-list>\r\n    </ng-container>\r\n</expansion-card>\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output\r\n} from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Person } from '../../../models';\r\nimport { SnackerService } from '../../../services';\r\nimport { SwapiAggregator } from './swapi.aggregator';\r\n\r\n@Component({\r\n    selector: 'people-aggregator',\r\n    templateUrl: 'people.aggregator.html'\r\n})\r\nexport class PeopleAggregator extends SwapiAggregator<Person> implements OnInit, OnDestroy {\r\n    @Input() search: Observable<string>;\r\n    @Output() action = new EventEmitter<Person>();\r\n\r\n    render = (person: Person) => person.name;\r\n\r\n    constructor(\r\n        protected http: HttpClient,\r\n        protected snacker: SnackerService\r\n    ) {\r\n        super(http, snacker, 'people');\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initSub(this.search);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.sub?.unsubscribe();\r\n    }\r\n}\r\n","<expansion-card heading=\"People\">\r\n    <ng-template #loading>\r\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n    </ng-template>\r\n    <ng-container *ngIf=\"query.result$ | async as result else loading\">\r\n        <swapi-list [result]=\"result\"\r\n                    [render]=\"render\"\r\n                    (previous)=\"setEndpoint($event)\"\r\n                    (next)=\"setEndpoint($event)\"\r\n                    (action)=\"action.emit($event)\"></swapi-list>\r\n    </ng-container>\r\n</expansion-card>\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output\r\n} from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Planet } from '../../../models';\r\nimport { SnackerService } from '../../../services';\r\nimport { SwapiAggregator } from './swapi.aggregator';\r\n\r\n@Component({\r\n    selector: 'planet-aggregator',\r\n    templateUrl: 'planet.aggregator.html'\r\n})\r\nexport class PlanetAggregator extends SwapiAggregator<Planet> implements OnInit, OnDestroy {\r\n    @Input() search: Observable<string>;\r\n    @Output() action = new EventEmitter<Planet>();\r\n\r\n    render = (planet: Planet) => planet.name;\r\n\r\n    constructor(\r\n        protected http: HttpClient,\r\n        protected snacker: SnackerService\r\n    ) {\r\n        super(http, snacker, 'planets');\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initSub(this.search);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.sub?.unsubscribe();\r\n    }\r\n}\r\n","<expansion-card heading=\"Planets\">\r\n    <ng-template #loading>\r\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n    </ng-template>\r\n    <ng-container *ngIf=\"query.result$ | async as result else loading\">\r\n        <swapi-list [result]=\"result\"\r\n                    [render]=\"render\"\r\n                    (previous)=\"setEndpoint($event)\"\r\n                    (next)=\"setEndpoint($event)\"\r\n                    (action)=\"action.emit($event)\"></swapi-list>\r\n    </ng-container>\r\n</expansion-card>\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output\r\n} from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Species } from '../../../models';\r\nimport { SnackerService } from '../../../services';\r\nimport { SwapiAggregator } from './swapi.aggregator';\r\n\r\n@Component({\r\n    selector: 'species-aggregator',\r\n    templateUrl: 'species.aggregator.html'\r\n})\r\nexport class SpeciesAggregator extends SwapiAggregator<Species> implements OnInit, OnDestroy {\r\n    @Input() search: Observable<string>;\r\n    @Output() action = new EventEmitter<Species>();\r\n\r\n    render = (species: Species) => species.name;\r\n\r\n    constructor(\r\n        protected http: HttpClient,\r\n        protected snacker: SnackerService\r\n    ) {\r\n        super(http, snacker, 'species');\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initSub(this.search);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.sub?.unsubscribe();\r\n    }\r\n}\r\n","<expansion-card heading=\"Species\">\r\n    <ng-template #loading>\r\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n    </ng-template>\r\n    <ng-container *ngIf=\"query.result$ | async as result else loading\">\r\n        <swapi-list [result]=\"result\"\r\n                    [render]=\"render\"\r\n                    (previous)=\"setEndpoint($event)\"\r\n                    (next)=\"setEndpoint($event)\"\r\n                    (action)=\"action.emit($event)\"></swapi-list>\r\n    </ng-container>\r\n</expansion-card>\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output\r\n} from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Starship } from '../../../models';\r\nimport { SnackerService } from '../../../services';\r\nimport { SwapiAggregator } from './swapi.aggregator';\r\n\r\n@Component({\r\n    selector: 'starship-aggregator',\r\n    templateUrl: 'starship.aggregator.html'\r\n})\r\nexport class StarshipAggregator extends SwapiAggregator<Starship> implements OnInit, OnDestroy {\r\n    @Input() search: Observable<string>;\r\n    @Output() action = new EventEmitter<Starship>();\r\n\r\n    render = (starship: Starship) => `${starship.name} - ${starship.model}`;\r\n\r\n    constructor(\r\n        protected http: HttpClient,\r\n        protected snacker: SnackerService\r\n    ) {\r\n        super(http, snacker, 'starships');\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initSub(this.search);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.sub?.unsubscribe();\r\n    }\r\n}\r\n","<expansion-card heading=\"Starships\">\r\n    <ng-template #loading>\r\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n    </ng-template>\r\n    <ng-container *ngIf=\"query.result$ | async as result else loading\">\r\n        <swapi-list [result]=\"result\"\r\n                    [render]=\"render\"\r\n                    (previous)=\"setEndpoint($event)\"\r\n                    (next)=\"setEndpoint($event)\"\r\n                    (action)=\"action.emit($event)\"></swapi-list>\r\n    </ng-container>\r\n</expansion-card>\r\n","import {\r\n    Observable,\r\n    Subscription\r\n} from 'rxjs';\r\n\r\nimport {\r\n    Swapi,\r\n    SwapiQuery\r\n} from '../../../models';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SnackerService } from '../../../services';\r\n\r\nexport abstract class SwapiAggregator<T extends Swapi> {\r\n    protected sub: Subscription;\r\n\r\n    query: SwapiQuery<T>;\r\n\r\n    constructor(\r\n        protected http: HttpClient,\r\n        protected snacker: SnackerService,\r\n        protected endpoint: string\r\n    ) {\r\n        this.query = new SwapiQuery<T>(http, snacker);\r\n        this.query.endpoint = endpoint;\r\n    }\r\n\r\n    initSub = (search: Observable<string>) =>\r\n        this.sub = search.subscribe({\r\n            next: (term: string) =>\r\n                this.query.search = term?.length > 0\r\n                    ? term\r\n                    : null\r\n        });\r\n\r\n    setEndpoint = (url: string) => this.query.endpoint = url;\r\n}\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output\r\n} from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Vehicle } from '../../../models';\r\nimport { SnackerService } from '../../../services';\r\nimport { SwapiAggregator } from './swapi.aggregator';\r\n\r\n@Component({\r\n    selector: 'vehicle-aggregator',\r\n    templateUrl: 'vehicle.aggregator.html'\r\n})\r\nexport class VehicleAggregator extends SwapiAggregator<Vehicle> implements OnInit, OnDestroy {\r\n    @Input() search: Observable<string>;\r\n    @Output() action = new EventEmitter<Vehicle>();\r\n\r\n    render = (vehicle: Vehicle) => `${vehicle.name} - ${vehicle.model}`;\r\n\r\n    constructor(\r\n        protected http: HttpClient,\r\n        protected snacker: SnackerService\r\n    ) {\r\n        super(http, snacker, 'vehicles');\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initSub(this.search);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.sub?.unsubscribe();\r\n    }\r\n}\r\n","<expansion-card heading=\"Vehicles\">\r\n    <ng-template #loading>\r\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n    </ng-template>\r\n    <ng-container *ngIf=\"query.result$ | async as result else loading\">\r\n        <swapi-list [result]=\"result\"\r\n                    [render]=\"render\"\r\n                    (previous)=\"setEndpoint($event)\"\r\n                    (next)=\"setEndpoint($event)\"\r\n                    (action)=\"action.emit($event)\"></swapi-list>\r\n    </ng-container>\r\n</expansion-card>\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output\r\n} from '@angular/core';\r\n\r\nimport {\r\n    Observable,\r\n    Subscription\r\n} from 'rxjs';\r\n\r\nimport {\r\n    Swapi,\r\n    SwapiResult\r\n} from '../../models';\r\n\r\nimport { SwapiService } from '../../services';\r\n\r\n@Component({\r\n    selector: 'swapi-aggregator',\r\n    templateUrl: 'swapi-aggregator.component.html'\r\n})\r\nexport class SwapiAggregatorComponent<T extends Swapi> implements OnInit, OnDestroy {\r\n    sub: Subscription;\r\n    result$: Observable<SwapiResult<T>>;\r\n    expanded: boolean = false;\r\n\r\n    @Input() name: string = 'Aggregator';\r\n    @Input() url: string;\r\n    @Input() search: Observable<string>;\r\n    @Output() select = new EventEmitter<T>();\r\n\r\n\r\n    constructor(\r\n        public swapi: SwapiService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.result$ = this.swapi.get(this.url);\r\n\r\n        this.sub = this.search?.subscribe({\r\n            next: (term: string) =>\r\n                this.result$ = term?.length > 0\r\n                    ? this.swapi.search(this.url, term)\r\n                    : this.swapi.get(this.url)\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.sub?.unsubscribe();\r\n    }\r\n\r\n    toggleExpanded = () => this.expanded = !this.expanded;\r\n}\r\n","<section fxLayout=\"column\"\r\n         fxLayoutAlign=\"start stretch\"\r\n         class=\"m4 rounded card-outline-accent\">\r\n    <section fxLayout=\"row\"\r\n             fxLayoutAlign=\"space-between center\"\r\n             class=\"background-card rounded p8\">\r\n        <h1 class=\"mat-title m4\">{{name}}</h1>\r\n        <button mat-icon-button\r\n                (click)=\"toggleExpanded()\">\r\n            <mat-icon>\r\n                {{expanded ? 'keyboard_arrow_down' : 'keyboard_arrow_up'}}\r\n            </mat-icon>\r\n        </button>\r\n    </section>\r\n    <section *ngIf=\"expanded\"\r\n             class=\"p8 rounded\"\r\n             fxLayout=\"column\"\r\n             fxLayoutAlign=\"start stretch\">\r\n        <ng-template #loading>\r\n            <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n        </ng-template>\r\n        <ng-container *ngIf=\"(result$ | async) as data else loading\">\r\n            <section fxLayout=\"column\"\r\n                     fxLayoutAlign=\"start stretch\"\r\n                     *ngIf=\"data.results?.length > 0\">\r\n                <ng-container *ngFor=\"let r of data.results\">\r\n                    <pre class=\"scroll-pre\"\r\n                         [style.max-height.px]=\"400\"><code class=\"green\">{{r | json}}</code></pre>\r\n                </ng-container>\r\n            </section>\r\n        </ng-container>\r\n    </section>\r\n</section>\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    Output\r\n} from '@angular/core';\r\n\r\nimport {\r\n    Swapi,\r\n    SwapiResult\r\n} from '../../models';\r\n\r\n@Component({\r\n    selector: 'swapi-list',\r\n    templateUrl: 'swapi-list.component.html'\r\n})\r\nexport class SwapiListComponent<T extends Swapi> {\r\n    @Input() result: SwapiResult<T>;\r\n    @Input() render: (data: T) => string;\r\n    @Output() next = new EventEmitter<string>();\r\n    @Output() previous = new EventEmitter<string>();\r\n    @Output() action = new EventEmitter<T>();\r\n}\r\n","<ng-container *ngIf=\"result?.count > 0\">\r\n    <section fxLayout=\"row\"\r\n             fxLayoutAlign=\"space-between center\">\r\n        <button mat-button\r\n                [disabled]=\"!result.previous\"\r\n                (click)=\"previous.emit(result.previous)\">Previous</button>\r\n        <button mat-button\r\n                [disabled]=\"!result.next\"\r\n                (click)=\"next.emit(result.next)\">Next</button>\r\n    </section>\r\n    <section *ngFor=\"let item of result.results\"\r\n             class=\"m4 p4 background-card rounded card-outline-accent\"\r\n             fxLayout=\"row\"\r\n             fxLayoutAlign=\"space-between center\">\r\n        <p class=\"mat-body-strong m4\">{{render(item)}}</p>\r\n        <button mat-button\r\n                color=\"primary\"\r\n                (click)=\"action.emit(item)\">Select</button>\r\n    </section>\r\n</ng-container>\r\n<p *ngIf=\"!(result?.count > 0)\"\r\n   class=\"mat-subheading-1 m4\">No Results Available</p>\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport {\r\n  MatCommonModule,\r\n  MatLineModule,\r\n  MatNativeDateModule,\r\n  MatOptionModule,\r\n  MatPseudoCheckboxModule,\r\n  MatRippleModule\r\n} from '@angular/material/core';\r\n\r\nimport {\r\n  FlexLayoutModule,\r\n  GridModule\r\n} from '@angular/flex-layout';\r\n\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { MatBadgeModule } from '@angular/material/badge'\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@NgModule({\r\n  exports: [\r\n    DragDropModule,\r\n    FlexLayoutModule,\r\n    GridModule,\r\n    MatBadgeModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatCommonModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatLineModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatOptionModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatPseudoCheckboxModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","export * from './swapi';\r\nexport * from './swapi-query';\r\n","import {\r\n    throwError,\r\n    ReplaySubject,\r\n    Subject,\r\n    Subscription\r\n} from 'rxjs';\r\n\r\nimport {\r\n    catchError,\r\n    filter,\r\n    switchMap\r\n} from 'rxjs/operators';\r\n\r\nimport {\r\n    Swapi,\r\n    SwapiResult\r\n} from './swapi';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SnackerService } from '../services';\r\n\r\nexport class SwapiQuery<T extends Swapi> {\r\n    private readonly baseUrl: string = 'https://swapi.dev/api/';\r\n\r\n    private url = new Subject<URL>();\r\n    private result = new ReplaySubject<SwapiResult<T>>(1);\r\n    private sub: Subscription;\r\n\r\n    private initUrl = (): Subscription =>\r\n        this.url\r\n            .pipe(\r\n                filter(url => !!url),\r\n                switchMap((url: URL) =>\r\n                    this.http.get<SwapiResult<T>>(url.toString())\r\n                        .pipe(\r\n                            catchError(er => throwError(() => new Error(er)))\r\n                        )\r\n                ),\r\n                filter(r => !!r)\r\n            )\r\n            .subscribe({\r\n                next: result => this.result.next(result),\r\n                error: err => this.snacker.sendErrorMessage(err)\r\n            });\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private snacker: SnackerService\r\n    ) {\r\n        this.sub = this.initUrl();\r\n    }\r\n\r\n    result$ = this.result.asObservable();\r\n    unsubscribe = () => this.sub?.unsubscribe();\r\n\r\n    private _endpoint: string = null;\r\n    get endpoint(): string { return this._endpoint; }\r\n    set endpoint(value: string) {\r\n        const url = new URL(value, this.baseUrl);\r\n\r\n        if (this.baseUrl.startsWith(url.origin)) {\r\n            if (url.toString() !== this._endpoint) {\r\n                this._endpoint = url.toString();\r\n                this.refresh();\r\n            }\r\n        }\r\n    }\r\n\r\n    private _search: string | null = null;\r\n    get search(): string | null {\r\n        return this._search;\r\n    }\r\n    set search(value: string | null) {\r\n        if (value !== this._search) {\r\n            this._search = value;\r\n            this.refresh(true);\r\n        }\r\n    }\r\n\r\n    refresh = (repage: boolean = false) => {\r\n        this.clear();\r\n\r\n        const url = new URL(this.endpoint, this.baseUrl);\r\n\r\n        if (repage)\r\n            url.searchParams.set('page', '1');\r\n\r\n        if (this.search)\r\n            url.searchParams.set('search', this.search);\r\n        else\r\n            url.searchParams.delete('search');\r\n\r\n        this.url.next(url);\r\n        this._endpoint = url.toString();\r\n    }\r\n\r\n    clear = () => this.result.next(null);\r\n}\r\n","import { Swapi } from './swapi';\r\n\r\nexport interface Film extends Swapi {\r\n    title: string;\r\n    episode_id: string;\r\n    opening_crawl: string;\r\n    directory: string;\r\n    producer: string;\r\n    release_date: Date;\r\n    characters: string[];\r\n    planets: string[];\r\n    species: string[];\r\n    starships: string[];\r\n    vehicles: string[];\r\n}\r\n","export * from './film';\r\nexport * from './person';\r\nexport * from './planet';\r\nexport * from './species';\r\nexport * from './starship';\r\nexport * from './swapi-result';\r\nexport * from './swapi';\r\nexport * from './vehicle';\r\n","import { Swapi } from './swapi';\r\n\r\nexport interface Person extends Swapi {\r\n    name: string;\r\n    birth_year: string;\r\n    eye_color: string;\r\n    gender: string;\r\n    hair_color: string;\r\n    height: string;\r\n    mass: string;\r\n    skin_color: string;\r\n    homeworld: string;\r\n    films: string[];\r\n    species: string[];\r\n    starships: string[];\r\n    vehicles: string[];\r\n}\r\n","import { Film } from './film';\r\nimport { Swapi } from './swapi';\r\n\r\nexport interface Planet extends Swapi {\r\n    name: string;\r\n    diameters: string;\r\n    rotation_period: string;\r\n    orbital_period: string;\r\n    gravity: string;\r\n    population: string;\r\n    climate: string;\r\n    terrain: string;\r\n    surface_water: string;\r\n    films: Film[];\r\n    residents: string[];\r\n}\r\n","import { Swapi } from './swapi';\r\n\r\nexport interface Species extends Swapi {\r\n    name: string;\r\n    classification: string;\r\n    designation: string;\r\n    average_height: string;\r\n    average_lifespan: string;\r\n    eye_colors: string;\r\n    hair_colors: string;\r\n    skin_colors: string;\r\n    language: string;\r\n    homeworld: string;\r\n    films: string[];\r\n    people: string[];\r\n}\r\n","import { Swapi } from './swapi';\r\n\r\nexport interface Starship extends Swapi {\r\n    name: string;\r\n    model: string;\r\n    starship_class: string;\r\n    manufacturer: string;\r\n    cost_in_credits: string;\r\n    length: string;\r\n    crew: string;\r\n    passengers: string;\r\n    max_atmosphering_speed: string;\r\n    hyperdrive_rating: string;\r\n    MGLT: string;\r\n    cargo_capacity: string;\r\n    consumables: string;\r\n    films: string[];\r\n    pilots: string[];\r\n}\r\n","import { Swapi } from './swapi';\r\n\r\nexport interface SwapiResult<T extends Swapi> {\r\n    count: number;\r\n    next: string | null;\r\n    previous: string | null;\r\n    results: T[];\r\n}\r\n","export interface Swapi {\r\n    url: string;\r\n    created: string;\r\n    edited: string;\r\n}\r\n","import { Swapi } from './swapi';\r\n\r\nexport interface Vehicle extends Swapi {\r\n    name: string;\r\n    model: string;\r\n    vehicle_class: string;\r\n    manufacturer: string;\r\n    length: string;\r\n    cost_in_credits: string;\r\n    crew: string;\r\n    passengers: string;\r\n    max_atmosphering_speed: string;\r\n    cargo_capacity: string;\r\n    consumables: string;\r\n    films: string[];\r\n    pilots: string[];\r\n}\r\n","import {\r\n    AfterContentInit,\r\n    Component,\r\n    ElementRef,\r\n    ViewChild\r\n} from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { CoreService } from '../../services';\r\n\r\n@Component({\r\n    selector: 'home-route',\r\n    templateUrl: 'home.route.html'\r\n})\r\nexport class HomeRoute implements AfterContentInit {\r\n    selected: any = null;\r\n    search$: Observable<string>;\r\n\r\n    @ViewChild('searchbar', { static: true }) searchbar: ElementRef;\r\n\r\n    constructor(\r\n        private core: CoreService\r\n    ) { }\r\n\r\n    ngAfterContentInit(): void {\r\n        this.search$ = this.core.generateInputObservable(this.searchbar);\r\n    }\r\n\r\n    select = (item: any) => this.selected = item;\r\n\r\n    clearSelection = () => this.selected = null;\r\n}\r\n","<mat-toolbar>\r\n    <span fxFlex>Star Wars API</span>\r\n    <button mat-button\r\n            [disabled]=\"!(selected)\"\r\n            (click)=\"clearSelection()\">Clear Selection</button>\r\n</mat-toolbar>\r\n<section fxLayout=\"row\"\r\n         fxLayoutAlign=\"start start\">\r\n    <section fxFlex=\"30\"\r\n             fxLayout=\"column\"\r\n             fxLayoutAlign=\"start stretch\">\r\n        <mat-form-field class=\"m8\">\r\n            <mat-label>Search Aggregators</mat-label>\r\n            <input #searchbar\r\n                   matInput>\r\n        </mat-form-field>\r\n        <ng-container *ngIf=\"search$\">\r\n            <film-aggregator [search]=\"search$\"\r\n                             (action)=\"select($event)\"></film-aggregator>\r\n            <people-aggregator [search]=\"search$\"\r\n                               (action)=\"select($event)\"></people-aggregator>\r\n            <planet-aggregator [search]=\"search$\"\r\n                               (action)=\"select($event)\"></planet-aggregator>\r\n            <species-aggregator [search]=\"search$\"\r\n                                (action)=\"select($event)\"></species-aggregator>\r\n            <starship-aggregator [search]=\"search$\"\r\n                                 (action)=\"select($event)\"></starship-aggregator>\r\n            <vehicle-aggregator [search]=\"search$\"\r\n                                (action)=\"select($event)\"></vehicle-aggregator>\r\n        </ng-container>\r\n    </section>\r\n    <section fxFlex=\"70\"\r\n             class=\"p8\">\r\n        <pre *ngIf=\"selected\"\r\n             class=\"pre-wrap\"><code>{{selected | json}}</code></pre>\r\n    </section>\r\n</section>\r\n","export * from './home.route';\r\n","import { Route } from '@angular/router';\r\nimport { HomeRoute } from './home';\r\n\r\nexport const RouteComponents = [\r\n  HomeRoute\r\n]\r\n\r\nexport const Routes: Route[] = [\r\n  { path: '', component: HomeRoute },\r\n  { path: '**', redirectTo: '', pathMatch: 'full' }\r\n]\r\n","import { HttpHeaders } from '@angular/common/http';\r\n\r\nimport {\r\n  Injectable,\r\n  ElementRef\r\n} from '@angular/core';\r\n\r\nimport {\r\n  fromEvent,\r\n  Observable\r\n} from 'rxjs';\r\n\r\nimport {\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  map\r\n} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoreService {\r\n  ssnPattern = /^(?!(000|666|9))\\d{3}-(?!(00))\\d{2}-(?!(0000))\\d{4}$/g;\r\n\r\n  getUploadOptions = (): HttpHeaders => {\r\n    const headers = new HttpHeaders();\r\n    headers.set('Accept', 'application/json');\r\n    headers.delete('Content-Type');\r\n    return headers;\r\n  }\r\n\r\n  getTextOptions = (): HttpHeaders => {\r\n    const headers = new HttpHeaders();\r\n    headers.set('Content-Type', 'text/plain');\r\n    headers.delete('Pragma');\r\n    return headers;\r\n  }\r\n\r\n  urlEncode = (value: string): string => {\r\n    const regex = /[^a-zA-Z0-9-.]/gi;\r\n    let newValue = value.replace(/\\s/g, '-').toLowerCase();\r\n    newValue = newValue.replace(regex, '');\r\n    return newValue;\r\n  }\r\n\r\n  generateInputObservable = (input: ElementRef): Observable<string> =>\r\n    fromEvent(input.nativeElement, 'keyup')\r\n      .pipe(\r\n        debounceTime(300),\r\n        map((event: any) => event.target.value),\r\n        distinctUntilChanged()\r\n      )\r\n}\r\n","export * from './swapi';\r\n\r\nexport * from './core.service';\r\nexport * from './snacker.service';\r\nexport * from './theme.service';\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport {\r\n  MatSnackBar,\r\n  MatSnackBarConfig\r\n} from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SnackerService {\r\n  private config = new MatSnackBarConfig();\r\n\r\n  constructor(private snackbar: MatSnackBar) {\r\n    this.config.duration = 5000;\r\n    this.config.panelClass = [];\r\n  }\r\n\r\n  private sendMessage = (message: string) => this.snackbar.open(message, 'Close', this.config);\r\n\r\n  setDuration(duration: number) {\r\n    this.config.duration = duration;\r\n  }\r\n\r\n  setClasses = (classes: string[]) => {\r\n    classes.push('snacker');\r\n    this.config.panelClass = classes;\r\n  }\r\n\r\n  sendColorMessage = (message: string, colors: string[]) => {\r\n    this.setClasses(colors);\r\n    this.sendMessage(message);\r\n  }\r\n\r\n  sendErrorMessage = (message: string) => {\r\n    this.setClasses(['snacker-red']);\r\n    this.sendMessage(message);\r\n  }\r\n\r\n  sendWarningMessage = (message: string) => {\r\n    this.setClasses(['snacker-orange']);\r\n    this.sendMessage(message);\r\n  }\r\n\r\n  sendSuccessMessage = (message: string) => {\r\n    this.setClasses(['snacker-green']);\r\n    this.sendMessage(message);\r\n  }\r\n}\r\n","export * from './swapi.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport {\r\n    Swapi,\r\n    SwapiResult\r\n} from '../../models';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SwapiService {\r\n    readonly api: string = 'https://swapi.dev/api/';\r\n\r\n    constructor(\r\n        public http: HttpClient\r\n    ) { }\r\n\r\n    get = <T extends Swapi>(endpoint: string): Observable<SwapiResult<T>> =>\r\n        this.http.get<SwapiResult<T>>(endpoint);\r\n\r\n    search = <T extends Swapi>(endpoint: string, term: string): Observable<SwapiResult<T>> =>\r\n        this.http.get<SwapiResult<T>>(`${endpoint}?search=${term}`);\r\n\r\n    retrieve = <T extends Swapi>(url: string) =>\r\n        this.http.get<T>(url);\r\n\r\n    retrieveAsync = <T extends Swapi>(url: string): Promise<T> => new Promise((resolve, reject) =>\r\n        this.retrieve<T>(url)\r\n            .subscribe({\r\n                next: (data: T) => resolve(data),\r\n                error: (err: any) => reject(err)\r\n            })\r\n    );\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeService {\r\n  isLight = true;\r\n\r\n  setOverlayContainerTheme = () => {\r\n    if (this.isLight) {\r\n      this.overlay.getContainerElement().classList.remove('app-dark');\r\n      this.overlay.getContainerElement().classList.add('app-light');\r\n    } else {\r\n      this.overlay.getContainerElement().classList.remove('app-light');\r\n      this.overlay.getContainerElement().classList.add('app-dark');\r\n    }\r\n  }\r\n\r\n  toggleTheme = () => {\r\n    this.isLight = !this.isLight;\r\n    this.setOverlayContainerTheme();\r\n  }\r\n\r\n  constructor(\r\n    private overlay: OverlayContainer\r\n  ) {\r\n    this.isLight = window.matchMedia && window.matchMedia('(prefers-color-scheme: light)').matches;\r\n\r\n    window.matchMedia('(prefers-color-scheme: light)')\r\n      .addEventListener('change', (e: MediaQueryListEvent) =>\r\n        this.isLight = e.matches\r\n      );\r\n\r\n    this.setOverlayContainerTheme();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["EventEmitter","SwapiAggregator","i0","ctx_r2","FilmAggregator","constructor","http","snacker","film","title","ngOnInit","initSub","search","ngOnDestroy","sub","unsubscribe","selectors","inputs","outputs","action","features","decls","vars","consts","template","_r0","PeopleAggregator","person","name","PlanetAggregator","planet","SpeciesAggregator","species","StarshipAggregator","starship","model","VehicleAggregator","vehicle","_r1","SwapiAggregatorComponent","swapi","expanded","result$","get","url","subscribe","next","term","length","select","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}